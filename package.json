{
  "name": "tsgames",
  "version": "1.0.0",
  "author": "oLsen",
  "engines": {
    "node": ">=18.0.0"
  },
  "license": "MIT",
  "dependencies": {
    "@fortawesome/fontawesome-free": "^6.5.1",
    "@types/jquery": "^3.5.30 ",
    "bulma": "0.7.5",
    "bulma-slider": "2.0.5",
    "eta": "^3.5.0",
    "express": "^4.21.0",
    "jquery": "^3.7.1",
    "requirejs": "^2.3.7",
    "sass": "^1.79.1",
    "typescript": "^4.6.4"
  },
  "devDependencies": {
    "@types/chai": "^4.3.19",
    "@types/express": "^4.17.21",
    "@types/mocha": "^10.0.8",
    "@types/node": "^17.0.33",
    "@typescript-eslint/eslint-plugin": "^8.6.0",
    "@typescript-eslint/parser": "^8.6.0",
    "chai": "^4.5.0",
    "eslint": "^8.57.1",
    "mocha": "^10.7.3",
    "nyc": "^15.1.0",
    "ts-node": "^10.9.2"
  },
  "scripts": {
    "copyAssets": "cp node_modules/bulma/css/bulma.min.css static/ && cp node_modules/bulma-slider/dist/css/bulma-slider.min.css static/ && cp -a node_modules/@fortawesome/fontawesome-free static/ && cp node_modules/requirejs/require.js static && cp node_modules/jquery/dist/jquery.min.js static",
    "compileAll": "yarn run compileBaseSass && yarn run compileBS && yarn run compileCaDi && yarn run compileCiSo  && yarn run compileCoTra && yarn run compileGoL && yarn run compileLiRo && yarn run compileMW && yarn run compilePeSo && yarn run compileSabo && yarn run compileServer && yarn run compileSnake && yarn run compileTTT && yarn run compileTTT3d && yarn run compileXmas",
    "compileBaseSass": "sass --style compressed sass/index.sass static/style.css",
    "compileBS": "tsc -p tsconfig/bs.json && sass --style compressed sass/bs.sass static/bs/style.css",
    "compileCaDi": "tsc -p tsconfig/cadi.json && sass --style compressed sass/cadi.sass static/cadi/style.css",
    "compileCiSo": "tsc -p tsconfig/ciso.json && sass --style compressed sass/ciso.sass static/ciso/style.css",
    "compileCoTra": "tsc -p tsconfig/cotra.json && sass --style compressed sass/cotra.sass static/cotra/style.css",
    "compileGoL": "tsc -p tsconfig/gol.json && sass --style compressed sass/gol.sass static/gol/style.css",
    "compileLiRo": "tsc -p tsconfig/liro.json && sass --style compressed sass/liro.sass static/liro/style.css",
    "compileMW": "tsc -p tsconfig/mw.json && sass --style compressed sass/mw.sass static/mw/style.css",
    "compilePeSo": "tsc -p tsconfig/peso.json && sass --style compressed sass/peso.sass static/peso/style.css",
    "compileSabo": "tsc -p tsconfig/sabo.json && sass --style compressed sass/sabo.sass static/sabo/style.css",
    "compileServer": "tsc -p tsconfig/server.json",
    "compileSnake": "tsc -p tsconfig/snake.json && sass --style compressed sass/snake.sass static/snake/style.css",
    "compileTTT": "tsc -p tsconfig/ttt.json && sass --style compressed sass/ttt.sass static/ttt/style.css",
    "compileTTT3d": "tsc -p tsconfig/ttt3d.json && sass --style compressed sass/ttt3d.sass static/ttt3d/style.css",
    "compileXmas": "tsc -p tsconfig/xmas.json && sass --style compressed sass/xmas.sass static/xmas/style.css",
    "eslint": "eslint ts/*/*.ts test/*/*.ts",
    "eslintFix": "eslint ts/*/*.ts test/*/*.ts --fix",
    "startServer": "node ts/server.js",
    "test": "tsc -p tsconfig/test.json && nyc --reporter=text-summary --reporter=html mocha -r ts-node/register $NODE_DEBUG_OPTION test/**/**.test.ts"
  }
}
